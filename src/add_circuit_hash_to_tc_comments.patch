--- LibreQoS.py.orig	2025-01-06 12:00:00.000000000 +0000
+++ LibreQoS.py	2025-01-06 12:00:00.000000000 +0000
@@ -1081,9 +1081,12 @@
 							# Generate TC commands to be executed later
 							tcComment = " # CircuitID: " + circuit['circuitID'] + " DeviceIDs: "
 							for device in circuit['devices']:
-								tcComment = '' #tcComment + device['deviceID'] + ', '
+								tcComment = tcComment + device['deviceID'] + ', '
 							if 'devices' in circuit:
 								if 'comment' in circuit['devices'][0]:
-									tcComment = '' # tcComment + '| Comment: ' + circuit['devices'][0]['comment']
+									tcComment = tcComment + '| Comment: ' + circuit['devices'][0]['comment']
 							tcComment = tcComment.replace("\n", "")
+							# Add circuit_hash to comment for lazy queue support
+							tcComment = tcComment + " # circuit_hash: " + str(circuit_hash)
 							command = 'class add dev ' + interface_a() + ' parent ' + data[node]['classid'] + ' classid ' + circuit['classMinor'] + ' htb rate '+ format_rate_for_tc(min_down) + ' ceil '+ format_rate_for_tc(circuit['maxDownload']) + ' prio 3' + quantum(circuit['maxDownload']) + tcComment
 							linuxTCcommands.append(command)
@@ -1099,6 +1102,8 @@
 								major_str = circuit['classMajor'].strip(':')
 								major = int(major_str, 16) if major_str.startswith('0x') else int(major_str)
 								minor = int(circuit['classMinor'], 16) if circuit['classMinor'].startswith('0x') else int(circuit['classMinor'])
+								# Add circuit_hash to qdisc command too
+								qdisc_comment = " # circuit_hash: " + str(circuit_hash)
-								command = 'qdisc add dev ' + interface_a() + ' parent ' + circuit['classMinor'] + ' ' + useSqm
+								command = 'qdisc add dev ' + interface_a() + ' parent ' + circuit['classMinor'] + ' ' + useSqm + qdisc_comment
 								linuxTCcommands.append(command)
@@ -1132,6 +1137,8 @@
 							command = 'class add dev ' + interface_b() + ' parent ' + parentString + ' classid ' + data[node]['up_classMinor'] + ' htb rate '+ format_rate_for_tc(min_up) + ' ceil '+ format_rate_for_tc(circuit['maxUpload']) + ' prio 3' + quantum(circuit['maxUpload'])
+							# Add circuit_hash to upload class too
+							command = command + " # circuit_hash: " + str(circuit_hash)
 							linuxTCcommands.append(command)
 							# Only add CAKE / fq_codel qdisc if monitorOnlyMode is Off
 							if monitor_mode_only() == False:
@@ -1141,6 +1148,8 @@
 								command = 'qdisc add dev ' + interface_b() + ' parent ' + data[node]['up_classMinor'] + ' ' + useSqm
+								# Add circuit_hash to upload qdisc too
+								command = command + " # circuit_hash: " + str(circuit_hash)
 								linuxTCcommands.append(command)